# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  initialisation: 
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
           node-version: 14.16.1
      - uses: actions/setup-java@v1
        with:
           java-version: '11.x'
      - name: Install node.js packages
        run: npm install
      - name: Creating artefact 
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: ${{ github.workspace }}

  front:
    needs: initialisation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Restoring artefact 
        uses: actions/download-artifact@v2
        with:
          name: artifact
          path: ${{ github.workspace }}
      - name: Unit Tests front
        run: npm run ci:frontend:test

  back:
    needs: initialisation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Restoring artefact 
        uses: actions/download-artifact@v2
        with:
          name: artifact
          path: ${{ github.workspace }}
      - name: Unit Tests back
        run: chmod +x mvnw && npm run ci:backend:test

  e2e:
    needs: [ front, back ]
    runs-on: ubuntu-latest

    env:
      JHI_E2E_HEADLESS: 'true'

    steps:
      - uses: actions/checkout@v2
      - name: Restoring artefact 
        uses: actions/download-artifact@v2
        with:
          name: artifact
          path: ${{ github.workspace }}
      - name: Test integrations
        run: ./mvnw -ntp verify -DskipTests --batch-mode "-Pprod" "-Pe2e" "-Denforcer.skip=true"* && npm run ci:e2e:prepare:docker && npm run ci:e2e:run && npm run ci:e2e:teardown

      - name: Build prod
        run: npm run webapp:build:prod

  sonar:
    needs: e2e
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Restoring artefact 
        uses: actions/download-artifact@v2
        with:
          name: artifact
          path: ${{ github.workspace }}
      - name: Build and analyze
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

  deploy:
    needs: sonar
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Restoring artefact 
        uses: actions/download-artifact@v2
        with:
          name: artifact
          path: ${{ github.workspace }}
      - name: Deploying on Heroku
        run: ./mvnw -ntp com.heroku.sdk:heroku-maven-plugin:2.0.5:deploy -DskipTests -Pprod -Dheroku.buildpacks=heroku/jvm -Dheroku.appName=stark-citadel-71344
